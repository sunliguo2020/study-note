日志标题：86条忠告等你大学毕业了在看后悔一辈子
发表时间：2006-3-21 22:03:03
日志内容：
一，别以为在学生会你能得到你曾经想要的。工作的热情很可能因为你所看到的所经历的一些事而改变，但是也不必惧怕。你有大一一年来适应或者承受，并做出是继续坚持还是退出的决定。
二，大学可能有真实的爱情，但是记住只是可能。很多时候他们是因为别人都谈恋爱而羡慕或者别的原因而在一起。所以，不必为任何分手而受太大的伤，记住，太大的伤，真爱，还是值得追求的。
三，如果你的家庭一般的话，那么记得你在大学有很多意外用钱的地方。比如二专业或者将来的各种班，为了你的家人和你自己的前途，永远别乱花钱。记住，永远。
四，朋友，你大学的朋友很可能就是你将来事业的一部分。他们会帮助你。但是你也应该让自己有帮助他们的实力，所以，你要努力，你和你的朋友会一起在将来打造一个可能很辉煌的事业。很好听是吗？但是记住，你们都要努力。
五，很多事情当你再回忆时会发现其实没什么。所以，不管你当时多么生气愤怒或者别的，都告诉自己不必这样，你会发现其实真的不必。
六，学习，永远别忘记她。不管别人怎么说大学是个提高综合能力的地方云云，如果你学习失败了，你就什么也不是——不排除意外，但你考虑好了吗？你会是那个意外吗？？
七，别说脏话，你应该知道习惯的力量。找工作或者和别人接触时，你随便的一个字或者几个字会让你在别人心中的形象大打折扣。
八，好好利用在公共场合说话的机会，展示或者锻炼，都可以。
九，别为你自己和别人下定论，无比重要。你所看到听到的可能只是一面，为这个失去可能的朋友，很不值。
十，如果你发现很久了你一直是一个人去食堂吃饭或者去上自习，别在意，大学里一个人是正常的，你觉得孤独？你的朋友是怕你觉得你没有自由的空间，所以别以为你没有朋友。
十一，很多事情别人通知你了，要说谢谢，没有通知你，不要责怪，因为那些事你其实应该自己弄清楚。
十二,“我请你吃饭“之类的话不要乱说,因为所有人都会当真,不管你自己怎么想,大学里请人吃饭是很平常的事,几乎连请一个自己不怎么认识的人吃饭都很正常.
十三,尊严是最重要的,但是在大学里，要懂得利用这个空间锻炼自己,要让自己的尊严有足够大的承受力,要知道,社会是
一个最喜欢打碎人的尊严的地方,除了你自己,没人会为你保留它.
十四,大学是亚社会.对,所以,当你上了高年级后,要让自己有大人的形象,大一的孩子看到你,你要能让他们感觉到你是他们的学长.你很成熟.十五,你有足够的理由佩服每天早起的人,不信的话,你去做.做到后会发现有很多人佩服你呢.
十六,经常给家里打个电话,即使他们说不想你.十七,你可以有喝醉的时候,我们可以接受,但是你要明白和真正的朋友一醉才能让伤心事方休,否则,你只会是别人的谈资和笑柄.十八,如果你四年内很少去图书馆的话,你就等于自己浪费了一大笔一大笔财富.所以,长去那里,随意翻翻,都有收获.
十九,不论男人还是女人,如果在大学里还把容貌当作重要的东西而过分重视的话,可能不会吃亏,但是早晚会吃亏.可能,很可能.二十,面试时很多老总会问你----如果你能见到老总的话-----你会做什么??也许你现在其实就可以记得这个问题,这样可能以后会好好答-----尤其对文科学生来说.二十一，新学期如果你接新生的话，当被问到学校怎么样之类的问题时，你要记住你不但是这个学校的一分子，你更要给你学弟学妹带来信心，你走过大一，你应该知道那时候对学长的信任多深。二十二，别总抱怨不公平，你的不公平对别人是公平的，辨证法——高三时学的，忘记了？二十三，别迷恋网络游戏。千万别。二十四，“我爱你“。别对很多人说这句话，在大学里，我的意思是，希望你只对一个人说，这是尊重你爱的人，更是尊重你自己的感情二十五，大学，因为你呆的地方是大学，所以你有空间承受失败和打击，因此，你应该......真的应该，找找......自信和自傲的区别，可以用一辈子的。二十六，如果你的个性让很多人对你敬而远之，那么你的个性是失败的，个性的成功在于能吸引，而不是能排斥。二是七，如果把上课不睡觉当做一种锻炼并且你做到了，那么，你很强，而且记住，其实你应该是这样的，老师再差，也比学生强，因为他们是老师。　　　　二十八，学生会的主席之类的干部，如果你尊重他们，告诉你自己那是因为他们是你的学长而不是因为他们是你的上级，事实上，大家都只是学生而已，只是学生。　　　　二十九，疯狂英语的话：别怕丢人，如果你实在不行就别怕丢人，行的话，建议你们-去追求丢人，那是一种成功的尝试，至于为此笑话你的人，你可以把他们从你将来人生对手的名单中排除了，所以你也不要笑话那些上台丢人的人。　　　　 三十,从绝望中寻找希望,人生终将辉煌. 　　　　三十一,如果你不抽烟的话,你的精力将比抽烟的时候好的多,这是绝的.　　　　三十二,你的确要学的有心计,但是记住,永远记住,在社会上要胜利的唯一的方法永远只是一个,那就是实力,永远不用怀疑.　　　　三十三,面对不公平的东西,不要抱怨,你的不公平可能恰恰是别人的公平.所以,你不如去努力的奋斗,争取你自己最合适的公平.　　　　三十四,人生百态,不要对新的看不惯的东西生气,无所谓的,比如说恋人同居问题,和我们很多人无关的.　　　　三十五,别总请人吃饭,别总让别人请你吃饭______朋友除外!　　　　三十六,在大学里就开始训练自己的冷静力,这是一种能力的,有大事时,能安静并能快速想出办法的人,很厉害.　　　　三十七,大学的竞争范围是所有的大学生,所以,你知道是否可以放松学习的.　　　　三十八,大了,成熟了,稳重了 ,但是这和激情不矛盾,一种对工作和学习的冲击力及持久力会让你有特殊的魅力和个人实力　　　　三十九，记着 在所谓的学生会里即便你就是主席 如果你的四级没过没有毕业证 的话 白搭 没单位想要你这样的人 单位需要的是工作的人 而不是当官的人 更何况现在的就是主席 学到的是喝酒 抽烟 相互的 吹捧　　　　四十 永远不要嘲笑你的教师无知或者单调，因为有一天当你发现你用瞌睡来嘲弄教师实际上很愚蠢时，你在社会上已经碰了很多钉子了。　　　 四十一 不要幻想自己成为招聘会上的宠儿，当你明白百分之七十的初中生都可以上大学时，你应该明白人们不会去崇拜一个群体的大多数的。　　　　四十二 英语一定要学好，但英语绝对不会是你生活的全部保障，所以多学点东西可能有时会救命的　　　　四十三，你可以看不惯一些东西，但是你应该学会接受——如果你没法改变那一切的话。　　四十四，对陌生人，或者把对方当做一张白纸，或者把对方当你的朋友，总之别当　　做敌人，即使你听到再多的关于他（她）的不好的传闻。　　　　四十五，爱你的人，不管你接不接受，你都应该感谢对方，这是对你们的尊重。　　　　四十六，在晚上，听听收音机也是种快乐和幸福。　　　 四十七： 每个星期一定要抽时间出来锻炼身体的。好处多多。　　　　四十八，如果周围有人嫉妒你，那么你可以把他从你的竞争者之列排除了，嫉妒人之人，难以成大事。　　　　四十九，别去争论，可以回忆一下，你会发现，人不可能赢得争论，可以说，争论所提级的话题都是不值得去争论的。　　　　五十，成功的方法多种多样 ，别不接受你看不惯的方法。　　　　五十一，男人，你长的可以不帅，但你这个人可以帅，而且，那才是真正得帅。　　（当然，女人也是同样得道理）所以，不必在穿着打扮上花太多心思。　　　 五十二，只有学习潇洒才可能一切潇洒。但是只是可能，因为处世能力过分出众而成功得人是有，但是你必须牢记实力得价值。　　　 五十三，进入大学，就是一个新的环境，接触新的人，你的所有过去对于他们来说是一张白纸，这是你最好的重新塑造自己形象的时候，改掉以前的缺点，没进入一个新的环境，都应该以全新的形象出现。　　　　五十四，为爱坚持的人，记得坚持可以，但是不要为爱受伤。　　　　五十五，或文或武，我是说你要有一样能行得地方，样样通样样松是为人之禁忌。样样通几样更通方是境界。　　　　五十六，QQ是联系朋友的工具，可以是交朋友的工具但是别轻易相信QQ上的友谊更别轻易幻想QQ上朋友得样子。　　　　五十七，还能冲动，表示你还对生活有激情，总是冲动，表示你还不懂生活。　　　　五十八，如果你不能拥有，那么告诉自己别忘记——如果你能承受那伤痛的话。　　　　五十九，虽然班级的概念在大学并不明显，但是也别忘记，你的同学你的朋友。　　　　六十，准备考研，早点比晚点好。　　六十一，别抱怨四级六级之类的东西，那是证明你能力的很好的东西。　　　　六十二，要有精英意识，考虑一下，大学的人了，迷恋武侠言情，已经没有意义。　　　　六十三，莫过于梗直，莫过于圆滑。外圆内方即可。　　　　六六十五，永远别渴望做个任何人都不得罪的人，有人反对有人支持然后自己做出决定是精彩的人生。　　　　六十六，魄力，要有魄力，即使是失败，也不要让自己的人生平庸。　　　　六十七，喜欢一个人，就勇敢的告诉他或者她，我在天涯说过大学是学习的地方，但是我理解爱情的力量。追求你真正爱的人，只要自己认为值得，那就是值得的。　　　　六十八，应该相信一句话：没有不可能的事情！！真的没有，只要去做，现在我们是学生，十年后呢？？二十年后呢？？想想。　　　　六十九，我不去想是否能够成功,既然选择了远方,便只顾风雨兼程。　　　　七十，后悔是一种耗费精神的情绪.后悔是比损失更大的损失,比错误更大的错误.所以不要后悔。　　七十一， 我们确实活得艰难，一要承受种种外部的压力，更要面对自己内心的困惑。在苦苦挣扎中，如果有人向你投以理解的目光，你会感到一种生命的暖意，或许仅有短暂的一瞥，就足以使我感奋不已。　　　　七十二，每个人都有潜在的能量，只是很容易:被习惯所掩盖，被时间所迷离,被惰性所消磨.　　　　七十三，于千万人之中，遇见你所遇见的人；于千万年之中，时间的无涯荒野里，没有早一步，也没有晚一步，刚巧赶上了　　　　七十四，你可以选择坚持，也可以选择放弃。没有对错。我是说对爱情来说，但是重要的是坚持你的选择。　　　　七十五，相信时间的力量，可以冲淡很多东西。　　　　七十六，在大学里坚持每天做一件相同的事，很能锻炼我们，试试便知。　　　　七十七，多笑笑，会慢慢让自己真的快乐起来。　　　　七十八,人生有很多次如果,但是没有一次但是.　　　　七十九,当你不懂得放弃的时候,你可以告诉自己你还懂得坚持.　　　　八十,大学的手机是否应该用只有自己有答案.　　　　八十一,永远不要瞧不起大学里的贫困生.　　　　八十二,在大学时代看看学校的招聘会吧.你会感觉到一种前途的危机.　　　　八十三,全是人.全是人.全是人.我只有连说三次全是人才能形容出场面的人数. -------寝室一个大哥向我形容招聘会的场面,后来我去看了.全是人.全是人.全是人.　　　　八十四,越大,我们就会发现对与错越是那么不明显.这不是错,这是事实,而且无法改变. 记得结交每一个值得结交的朋友。　　　　八十五，无聊的时候，别忘记朋友。朋友无聊的时候，别忘记你是他们的朋友。　　　　八十六，社会上要想分出层次，只有一个办法，那就是竞争，你必须努力，否则结局就是被压在社会的底层。

摘自 vercd

日志标题：VI使用指南
发表时间：2006-3-25 10:19:00
日志内容：|文章来源：天极网 | 转载注明：www.cittm.net | 　　相信用过Linux的朋友一定不会对vi陌生吧，它是Linux环境中使用最为普遍的全屏幕编文本辑器。但由于我们一般用户最初接触的都是微软的产品，它和DOS下的EDIT和Windows下的记事本的使用方法不尽相似，所以另初学Linux朋友觉得vi很难用，甚至无从下手，下面我就向大家介绍vi 的使用方法。 　　首先需要说明的是，vi分为两种状态，即命令状态和编辑状态，在命令状态下，所键入的字符系统均作命令来处理，如:q代表退出，而编辑状态则是用来输入文字资料的。当你进入vi时，会首先进入命令状态。现在对vi也有了基本的认识，如果你有兴趣请接着往向看。 　　要进入vi，直接在系统提示符下键入vi &lt;文件名&gt;，当你键入的文件名是已有文件时，则系统自动打开此文件，否则将建立一个新文件。这时你将会看到屏幕左边会出现波浪线~，这就代表该行是空的，没有任何文字，这时系统正在命令状态，怎样切换到编辑状态输入文字呢？按键盘上的Insert键即可，这时我们就可以像使用其它的编辑器一样进行文字的编辑了，功能键也和其它编辑器差不多，下面就是一些功能键的说明，是不是很简单？ 　　=========================================================== 　　说明　　　　　　　　　　　　　　　　功能键　　=========================================================== 　　移动光标到所在行的最前面　　　　　　Home 　　移动光标到所在行的最后面　　　　　　End 　　向下翻一页　　　　　　　　　　　　　Page Down 　　向上翻一页　　　　　　　　　　　　　Page Up 　　删除光标所在位置字符　　　　　　　　Delete 　　删除光标所在位置前面的字符　　　　　Backspace 　　移动光标　　　　　　　　　　　　　　←↑↓→ 　　=========================================================== 　　另外，vi还支持粘贴与复制，不过用键盘来做实在很麻烦，现在哪台电脑没有鼠标呢？和Windows中一样，从你要复制的开始位置拖动鼠标到结束位置，这块区域就反白了，再将光标移到你要粘贴的位置，按鼠标中键即可完成粘贴（如果你的鼠标是两个键的，同时按左右键即可模拟三键鼠标的中键），这比 Windos里方便吧。也许有的朋友会问，如何进行查找呢？下面我们按键盘上的Esc键切换到命令状态，输入“?&lt;你要查找的字符串&gt;”（不带引号）就执行向下查找操作，而“/&lt;你要查找的字符串&gt;”表示向上查找，键盘上的n表示重复一次，而N表示反方向重复一次。 　　说了半天，可能你的文件已经编辑完成了，但如何存盘呢？现在我们还是保持在命令状态，按:w按后回车即完成了存盘工作，而退出vi返回到Linux的命令是:q，这两个命令也可以组合使用，如:wq代表存盘退出。 　　好了，说了半天，可能你的头已经大了，上面讲到的那些只是vi中最常用的功能，至于其它的功能你可以在使用中慢慢体会。顺便说一句，不要强记那些命令，它们看起来多而毫无规律，多用几次自然就熟练了，现在我觉得比Windows中的记事本方便多了。
附件（常用命令）
模式：命令模式，编辑模式，末行模式。
切换方式：命令模式→i→编辑模式，编辑模式→Esc→命令模式，命令模式→：→末行模式。
功能：
 命令模式(Command Mode)： 控制光标移动，删除字符，段落复制。 编辑模式(Insert Mode)： 新增文字及修改文字。 末行模式(Last Line Mode)：保存文件，离开vi，以及其他设置。
命令模式命令
命令 说明h 将光标向左移动一格l 将光标向右移动一格j 将光标向下移动一格k 将光标向上移动一格0 数字0，将光标移动到该行的行首$ 将光标移动到该行的行末H 将光标移动到该屏幕的顶端M 将光标移动到该屏幕的中间L 将光标移动到该屏幕的底端gg 将光标移动到文章的首行G 将光标移动到文章的尾行w或W 将光标移动到下一单词x 删除光标所在处的字符X 删除光标前的字符dd 删除光标所在行*dd 从光标所在行向下删除*行，*为数字D 删除光标所在处到行尾r 取代光标处的一个字符R 从光标处向后替换，按Esc结束u 取消上步的操作U 取消目前的所有操作yy 复制光标所在行p 将复制的内容放在光标所在行的下行
编辑模式命令
命令 说明a 在光标后插入文本A 在光标所在行后插入文本i 在光标前插入文本I 在光标所在行前插入文本o 在光标所在行下插入新行(小写字母o)O 在光标所在行上插入新行(大写字母O)
末行命令
命令 说明e 创建新文件n 加载新文件w 保存文件! 强行操作w! 强行保存文件q 退出q! 强行退出wq 保存退出wq! 强行保存退出set nu 显示行号set nonu 不显示行号/* /搜索，*任意字符串? 同上

日志标题：对Linux的认识存在的一些误区
发表时间：2006-3-25 10:38:17
日志内容：来源：天极网 作者：薜启康 小蚁 对Linux的认识还存在哪些认识上的误区：　 　 1.Linux运行很慢　　一些DOS程序看起来在运行速度上比Linux程序要快，这主要是因为DOS不是多任务操作系统。事实上NT在运行一些程序时，速度也比DOS慢，原因是相同的。但是两个多任务操作系统相比，NT远没有Linux运行得快。 　 　2.Linux会频繁崩溃　　有这种想法的用户，一定对Linux不是很了解。目前网络操作系统中Linux和UNIX占据60％的市场空间。由于Linux可以自己编译内核，可以针对不同电脑硬件安装最适应的驱动程序，其稳定性和速度是Windows无法比拟的。一般情况下Linux主机最少可以不间断稳定运行两年，想想你的电脑有这样的性能吗？　 　3.Linux操作系统太大　　一个操作系统太大有两方面：一是硬件驱动程序太多，另外是占用内存太多。DOS比Linux小很多，但是它并不能为你做更多的东西。现在看看 Windows 9x，它也是一个十分臃肿的操作系统。同Linux相同，其驱动程序占用了很多硬盘空间。Linux将很多东西经打包后存放在硬盘中，在作为一个工作站使用时，Linux大约要占取100MB左右的硬盘空间，被安装的软件包括所有的工具、开发系统和Internet服务器等。从占用内存方面来说， Linux占用的内存很少，通常在运行字符应用时，4MB物理内存就够了，而且在这种情况下，Linux就可以充分发挥出它的强大功能。相比之下， Windows 9x在4MB下无法运行任何程序。　　4.开发Linux应用比较困难　　这种说法毫无根据。当你拿到Linux的任何一个发行套件时，其中就包含了很多种编译器。其中还包含开发窗口的编程环境，提供用户语法加亮显示、编译等所有类似集成开发环境中应有的功能。同时，操作系统提供的函数库有支持声音、图形等开发所需的基本函数。

日志标题：安装linx
发表时间：2006-3-24 16:24:59
日志内容：今天上午花了近四个小时，眼看就要安完linx了，就在最后两分钟，停电拉！一上午的功夫全部报废了。
 也不知道是怎么搞得，这个版本的linux 安装时间特别长。要这么多时间，记得安red hat 9.0时，才花了一个多小时！
 不要怕，下午接着安。
 给大家推荐一个学习linx 的网站 w'w'w.linuxsir.org我觉得不错的！希望大家能喜欢。


日志标题：Linux 下挂载文件系统
发表时间：2006-3-24 19:20:27
日志内容：#isubb#作者：lilleo 2005-01-24 11:19:55 来自：Linux公社 
   1、挂载点必须是一个目录。
   2、一个分区挂载在一个已存在的目录上，这个目录可以不为空，但挂载后这个目录下以前的内容将不可用。对于其他操作系统建立的文件系统的挂载也是这样。但是需要理解的是：光盘、软盘、其他操作系统使用的文件系统的格式与linux使用的文件系统格式是不一样的。光盘是ISO9660；软盘是fat16或ext2；windows NT是fat16、NTFS；windows98是fat16、fat32；windows2000和windowsXP是fat16、fat32、 NTFS。挂载前要了解linux是否支持所要挂载的文件系统格式。
    挂载时使用mount命令： 格式：mount [-参数] [设备名称] [挂载点]
    其中常用的参数有 -t 指定设备的文件系统类型，常见的有： minix linux最早使用的文件系统 ext2 linux目前常用的文件系统 msdos MS-DOS的fat，就是fat16 vfat windows98常用的fat32 nfs 网络文件系统 iso9660 CD-ROM光盘标准文件系统 ntfs windows NT 2000的文件系统 hpfs OS/2文件系统 auto 自动检测文件系统 -o 指定挂载文件系统时的选项。有些也可用在/etc/fstab中。常用的有 codepage=XXX 代码页 iocharset=XXX 字符集 ro 以只读方式挂载 rw 以读写方式挂载 nouser 使一般用户无法挂载 user 可以让一般用户挂载设备提醒一下，mount命令没有建立挂载点的功能，因此你应该确保执行mount命令时，挂载点已经存在。（不懂？说白了点就是你要把文件系统挂载到哪，首先要先建上个目录。这样OK？） 
   例子：windows98装在hda1分区，同时计算机上还有软盘和光盘需要挂载。
   # mkdir /mnt/winc 
   # mkdir /mnt/floppy 
   # mkdir /mnt/cdrom 
   # mount -t vfat /dev/hda1 /mnt/winc 
   # mount -t msdos /dev/fd0 /mnt/floppy 
   # mount -t iso9660 /dev/cdrom /mnt/cdrom 
  现在就可以进入/mnt/winc等目录读写这些文件系统了。要保证最后两行的命令不出错，要确保软驱和光驱里有盘。（要是硬盘的磁盘片也可以经常随时更换的话，我想就不会犯这样的错误了 :-> ）如果你的windows98目录里有中文文件名，使用上面的命令挂载后，显示的是一堆乱码。这就要用到 -o 参数里的codepage iocharset选项。codepage指定文件系统的代码页，简体中文中文代码是936；iocharset指定字符集，简体中文一般用cp936或 gb2312。当挂载的文件系统linux不支持时，mount一定报错，如windows2000的ntfs文件系统。可以重新编译linux内核以获得对该文件系统的支持。关于重新编译linux内核，就不在这里说了。
   四 、自动挂载每次开机访问windows分区都要运行mount命令显然太烦琐，为什么访问其他的linux分区不用使用mount命令呢？其实，每次开机时，linux自动将需要挂载的linux分区挂载上了。那么我们是不是可以设定让linux在启动的时候也挂载我们希望挂载的分区，如 windows分区，以实现文件系统的自动挂载呢？这是完全可以的。
   在/etc目录下有个fstab文件，它里面列出了linux开机时自动挂载的文件系统的列表。我的/etc/fstab文件如下： /dev/hda2 / ext3 defaults 1 1 
      /dev/hda1 /boot ext3 defaults 1 2 none
      /dev/pts devpts gid=5,mode=620 0 0 none
      /proc proc defaults 0 0 none 
      /dev/shm tmpfs defaults 0 0
      /dev/hda3 swap swap defaults 0 0
      /dev/cdrom /mnt/cdrom iso9660 noauto,codepage=936,iocharset=gb2312 0 0 
     /dev/fd0 /mnt/floppy auto noauto,owner,kudzu 0 0
     /dev/hdb1 /mnt/winc vfat defaults,codepage=936,iocharset=cp936 0 0 
     /dev/hda5 /mnt/wind vfat defaults,codepage=936,iocharset=cp936 0 0 
  在/etc/fstab文件里，第一列是挂载的文件系统的设备名，第二列是挂载点，第三列是挂载的文件系统类型，第四列是挂载的选项，选项间用逗号分隔。第五六列不知道是什么意思，还望高手指点。在最后两行是我手工添加的windows下的C；D盘，加了codepage=936和iocharset=cp936参数以支持中文文件名。参数 defaults实际上包含了一组默认参数： rw 以可读写模式挂载 suid 开启用户ID和群组ID设置位 dev 可解读文件系统上的字符或区块设备 exec 可执行二进制文件 auto 自动挂载 nouser 使一般用户无法挂载 async 以非同步方式执行文件系统的输入输出操作大家可以看到在这个列表里，光驱和软驱是不自动挂载的，参数设置为noauto。（如果你非要设成自动挂载，你要确保每次开机时你的光驱和软驱里都要有盘，呵呵。）

日志标题：合理规划您的硬盘分区(一)
发表时间：2006-3-26 18:18:09
日志内容：

合理规划您的硬盘分区
作者：北南南北来自：LinuxSir.Org提要：对于一个硬盘（包括移动存储设备）如何规划分区结构及如何划分才是比较合理的；为了减少由于硬盘划分不合理而造成的风险及不必要的麻烦，有必要重述如何对一个硬盘的分区结构进行规划；
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++正文+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++一、关于硬盘种类、物理几何结构及硬盘容量、分区大小计算；
1、硬盘种类、物理几何结构
硬盘的种类主要是SCSI 、IDE 、以及现在流行的SATA等；任何一种硬盘的生产都要一定的标准；随着相应的标准的升级，硬盘生产技术也在升级；比如 SCSI标准已经经历了SCSI-1 、SCSI-2、SCSI-3；其中目前咱们经常在服务器网站看到的 Ultral-160就是基于SCSI-3标准的；IDE 遵循的是ATA标准，而目前流行的SATA，是ATA标准的升级版本；IDE是并口设备，而SATA是串口，SATA的发展目的是替换IDE；
硬盘的物理几何结构是由盘、磁盘表面、柱面、扇区组成，一个张硬盘内部是由几张碟片叠加在一起，这样形成一个柱体面；每个碟片都有上下表面；磁头和磁盘表面接触从而能读取数据；2、硬盘容量及分区大小的算法；
我们通过fdsik -l 可以发现如下的信息：
Disk /dev/hda: 80.0 GB, 80026361856 bytes255 heads, 63 sectors/track, 9729 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesDevice Boot Start End Blocks Id System/dev/hda1 * 1 765 6144831 7 HPFS/NTFS/dev/hda2 766 2805 16386300 c W95 FAT32 (LBA)/dev/hda3 2806 9729 55617030 5 Extended/dev/hda5 2806 3825 8193118+ 83 Linux/dev/hda6 3826 5100 10241406 83 Linux/dev/hda7 5101 5198 787153+ 82 Linux swap / Solaris/dev/hda8 5199 6657 11719386 83 Linux/dev/hda9 6658 7751 8787523+ 83 Linux/dev/hda10 7752 9729 15888253+ 83 Linux
其中 heads 是磁盘面；sectors 是扇区；cylinders 是柱面；每个扇区大小是 512byte，也就是0.5M；
通过上面的例子，我们发现此硬盘有 255个磁盘面，有63个扇区，有9729个柱面；所以整个硬盘体积换算公式应该是：磁面个数 x 扇区个数 x 每个扇区的大小512 x 柱面个数 = 硬盘体积 （单位bytes)
所以在本例中磁盘的大小应该计算如下：
255 x 63 x 512 x 9729 = 80023749120 bytes 
提示：由于硬盘生产商和操作系统换算不太一样，硬盘厂家以10进位的办法来换算，而操作系统是以2进位制来换算，所以在换算成M或者G 时，不同的算法结果却不一样；所以我们的硬盘有时标出的是80G，在操作系统下看却少几M；
上面例子中，硬盘厂家算法 和 操作系统算数比较：
硬盘厂家： 80023749120 bytes = 80023749.120 K = 80023.749120 M （向大单位换算，每次除以1000）操作系统： 80023749120 bytes = 78148192.5 K = 76316.594238281 M （向大单位换算，每次除以1024）
我们在查看分区大小的时候，可以用生产厂家提供的算法来简单推算分区的大小；把小数点向前移动六位就是以G表示的大小；比如 hda1 的大小约为 6.144831G ；
二、关于硬盘分区划分标准及合理分区结构；
1、硬盘分区划分标准
硬盘的分区由主分区、扩展分区和逻辑分区组成；所以我们在对硬盘分区时要遵循这个标准；主分区（包括扩展分区）的最大个数是四个，主分区（包含扩展分区）的个数硬盘的主引导记录MBR（Master Boot Recorder）决定的，MBR存放启动管理程序(GRUB，LILO，NTLOARDER等）和分区表记录。其中扩展分区也算一个主分区；扩展分区下可以包含更多的逻辑分区；所以主分区（包括扩展分区）范围是从1-4，逻辑分区是从5开始的；比如下面的例子：
Device Boot Start End Blocks Id System/dev/hda1 * 1 765 6144831 7 HPFS/NTFS/dev/hda2 766 2805 16386300 c W95 FAT32 (LBA)/dev/hda3 2806 9729 55617030 5 Extended/dev/hda5 2806 3825 8193118+ 83 Linux/dev/hda6 3826 5100 10241406 83 Linux/dev/hda7 5101 5198 787153+ 82 Linux swap / Solaris/dev/hda8 5199 6657 11719386 83 Linux/dev/hda9 6658 7751 8787523+ 83 Linux/dev/hda10 7752 9729 15888253+ 83 Linux
通过这个例子，我们可以看到主分区有3个，从 hda1-hda3 ，扩展分区由 hda5-hda10 ；此硬盘没有主分区4，所以也没有显示主分区hda4 ；但逻辑分区不可能从4开始，因为那是主分区的位置，明白了吧； 
2、硬盘设备（包括移动存储设备）在Linux或者其它类Unix系统的表示；
IDE 硬盘在Linux或者其它类Unix系统的一般表示为 hd* ，比如hda、hdb ... ... ，我们可以通过 fdisk -l 来查看；有时您可能只有一个硬盘，在操作系统中看到的却是 hdb ，这与硬盘的跳线有关；另外hdc 大多表示是光驱设备；如果您有两块硬盘，大多是 hda和hdb。在这方面说的太多也无用，还是以fdisk -l 为准为好；
SCSI 和SATA 硬盘在Linux通常也是表示为 sd* ，比如 sda 、sdb ... ... 以fdisk -l 为准
移动存储设备在linux表示为 sd* ，比如 sda 、sdb ... ... 以fdisk -l 为准
3、合理的规划分区；
关于一个磁盘的分区，一个磁盘应该有四个主分区，其中扩展也算一个主分区；存在以下情况：1）分区结构之一：四个主分区,没有扩展分区；
[主|分区1] [主分|区2] [主|分区3] [主|分区4]
这种情况，如果您想在一个磁盘上划分五个以上分区，这样是行不通的；
三个主分区 一个扩展分区；
[主|分区1] [主|分区2] [主|分区3] [扩展分区]|[逻辑|分区5] [逻辑|分区6] [逻辑|分区7] [逻辑|分区8] ... ...
这种情况行得通，而且分区的自由度比较大；分区也不受约束，能分超过5个分区；这只是举一个例子；


日志标题：合理规划您的硬盘分区(二)
发表时间：2006-3-26 18:25:26
日志内容：2）最合理的的分区方式；
最合理的分区结构：主分区在前，扩展分区在后，然后在扩展分区中划分逻辑分区；主分区的个数+扩展分区个数要控制在四个之内；比如下面的分区是比较好的；
[主|分区1] [主|分区2] [主|分区3] [扩展分区]|[逻辑|分区5] [逻辑|分区6] [逻辑|分区7] [逻辑|分区8] ... ...
[主|分区1] [主|分区2] [扩展分区]|[逻辑|分区5] [逻辑|分区6] [逻辑|分区7] [逻辑|分区8] ... ...
[主|分区1] [扩展分区]|[逻辑|分区5] [逻辑|分区6] [逻辑|分区7] [逻辑|分区8] ... ...
最不合理的分区结构： 主分区包围扩展分区；比如下面的；
[主|分区1] [主|分区2] [扩展分区] [主|分区4] [空白未分区空间]|[逻辑|分区5] [逻辑|分区6] [逻辑|分区7] [逻辑|分区8] ... ...
这样 [主|分区2] 和 [主|分区4] 之间的 [扩展分区] 是有自由度，但[主|分区4]后的[空白未分区空间]怎么办？除非把主分区4完全利用扩展分区后的空间，否则您想在主分区4后再划一个分区是不可能的，划分逻辑分区更不可能； 虽然类似此种办法也符合一个磁盘四个主分区的标准，但这样主分区包围扩展分区的分区方法实在不可取；
我们根据这个标题，查看一下我们的例子，是不是符合这个标准呢？
Device Boot Start End Blocks Id System/dev/hda1 * 1 765 6144831 7 HPFS/NTFS/dev/hda2 766 2805 16386300 c W95 FAT32 (LBA)/dev/hda3 2806 9729 55617030 5 Extended/dev/hda5 2806 3825 8193118+ 83 Linux/dev/hda6 3826 5100 10241406 83 Linux/dev/hda7 5101 5198 787153+ 82 Linux swap / Solaris/dev/hda8 5199 6657 11719386 83 Linux/dev/hda9 6658 7751 8787523+ 83 Linux/dev/hda10 7752 9729 15888253+ 83 Linux
后记：
把分区基础写出来，主要是想让新手弟兄知道什么是合理的分区结构，如果把硬盘分区规划好了，也为以学习省却了不少麻烦；在此文后，我计划写具体的分区工具介绍；这也算一个基础知识的积累；虽然老手都会，但新手可能还是需要的；
致谢:
对于本文zhy2111314 兄弟也有贡献；在此致谢；
附录：
《系统引导过程及硬盘分区结构论述》《Linux 查看磁盘分区、文件系统、使用情况的介绍》《实例解说 fdisk 使用方法》《在Linux系统中存储设备的两种表示方法》


日志标题：Apache2的httpd.conf翻译
发表时间：2006-4-9 20:57:26
日志内容：Apache2的httpd.conf翻译 
--------------------------------------------------------------------------------此为转帖，支持原创！！！出处：http://www.7880.com/Info/Article-3df0ef00.html
刚刚在网上搜到的，个人感觉是不错教程，特拿来与兄弟们分享！# 基于 NCSA 服务的配置文件。##这是Apache服务器主要配置文件。#它包含服务器的影响服务器运行的配置指令。#参见&lt;URL:http://httpd.ache.org/doc-2.0/&gt;以取得关于这些指令的详细信息##不要只是简单的阅读这些指令信息而不去理解它。#这里只是做了简单的说明，如果你没有参考在线文件，你就会被警告。##这些配置指令被分为下面三个部分：#1. 控制整个Apache服务器行为的部分（即全局环境变量）#2. 定义主要或者默认服务参数的指令，也为所有虚拟主机提供默认的设置参数#3. 虚拟主机的设置参数##配置和日志文件名：如果你指定的文件名以“/”开始（win32下以“dirver:/”），#服务器将使用绝对路径，如果文件名不是以“/”开始的，那么它将把ServerRoot#的值附加在文件名的前面，例如，对“logs/foo.log"，如果ServerRoot的值#为“/usr/local/apache2”，则该文件应为“/usr/local/apache2/logs/foo.log”###第一区：全局环境参数##这里设置的参数将影响整个Apache服务器的行为；#例如Apache能够处理的并发请求的数量等。##ServerRoot:指出服务器保存其配置、出错和日志文件等的根目录。##注意！如果你想要将它指定为NFS或其它网络上的位置，#请一定要去阅读与LockFile有关的文档（可能在#&lt;URL:http://httpd.apache.org/docs-2.0/mod/mpm_common.html#lockfile&gt;)。#这将会使你自己也能解决很多问题。##路径的结尾不要添加斜线。#ServerRoot "/usr/loacl/apache2"
##串行访问的锁文件必须保存在本地磁盘上#&lt;IfModule !mpm_winnt.c&gt;&lt;IfModule !mpm_neware.c&gt;#LockFile logs/accept.lock&lt;/IfModule&gt;&lt;/IfModule&gt;
#ScoreBoardFile:用来保存内部服务进程信息的文件。#如果未指明（默认），记分板（scoreboard）将被保存在一个匿名的共享内存段中，#并且它不能被第三方软件所使用。#如果指定了，要确保不能使用两个Apache使用同一个记分板文件，#这个记分板文件必须保存在本地磁盘上。#&lt;IfModule !mpm_netware.c&gt;&lt;IfModule !perchild.c&gt;#ScoreBoardFile logs/apache_runtime_status&lt;IfModule&gt;&lt;IfModule&gt;
##PidFile:记录服务器启动进程号的文件。#&lt;IfModule !mpm_neware.c&gt;PidFile logs/httpd.pid&lt;/IfModule&gt;
##Timeout:接收和发送前超时秒数#Timeout 300
##KeepAlive:是否允许稳固的连接（每个连接有多个请求），#设为"Off"则停用。#KeepAlive On
##MaxKeepAliveRequests:在稳固连接期间允许的最大请求数，#设为0表示无限制接入。#我们推荐你将其设为一个较大的值，以便提高性能MaxKeepAliveRequests 100
##KeepAliveTimeout:在同一个连接上从同一台客户上接收请求的秒数#KeepAliveTimeout 15
####Server-Pool大小设定（针对MPM的）##
# prefork MPM# StartServers:启动时服务器启动的进程数# MinSpareServers:保有的备用进程的最小数目# MaxSpareServers:保有的备用进程的最大数目# MaxClients:服务器允许启动的最大进程数# MaxRequestsPerChild:一个服务进程允许的最大请求数&lt;IfModule prefork.c&gt;StartServers 5MinSpareServers 5MaxSpareServers 10MaxClients 150MaxRequestPerChild 0&lt;/IfModule&gt;
# worker MPM# StartServers:服务器启动时的服务进程数目# MaxClients:允许同时连接的最大用户数目# MinSpareThreads:保有的最小工作线程数目# MaxSpareThreads:允许保有的最大工作线程数目# ThreadsPerChild:每个服务进程中的工作线程常数# MaxRequestsPerChild:服务进程中允许的最大请求数目&lt;IfModule worker.c&gt;StartServers 2MaxClients 150MinSpareThreads 25MaxSpareThreads 75ThreadsPerChild 25MaxRequestsPerChild 0&lt;/IfModule&gt;
# perchild MPM# NumServers:服务进程数量# StartThreads:每个服务进程中的起始线程数量# MinSpareThreads:保有的最小线程数量# MaxSpareThreads:保有的最大线程数量# MaxThreadsPerChild:每个服务进程允许的最大线程数# MaxRequestsPerChild:每个服务进程允许连接的最大数量&lt;IfModule perchild.c&gt;NumServers 5StartThreads 5MinSpareThreads 5MaxSpareThreads 10MaxThreadsPerChild 20MaxRequestsPerChild 0&lt;/IfModule&gt;
# WinNT MPM# ThreadsPerChild:服务进程中工作线程常数# MaxRequestsPerChild:服务进程允许的最大请求数&lt;IfModule mpm_winnt.c&gt;ThreadsPerChild 250MaxRequestsPerChild 0&lt;/IfModule&gt;
# BeOS MPM# StartThreads:服务器启动时启动的线程数# MaxClients:可以启动的最大线程数（一个线程等于一个用户）# MaxRequestsPerThread:每个线程允许的最大请求数&lt;IfModule beos.c&gt;StartThreads 10MaxClients 50MaxRequestsPerThread 10000&lt;/IfModule&gt;
# NetWare MPM# ThreadStachSize:为每个工作线程分配的堆栈尺寸# StartThreads:服务器启动时启动的线程数# MinSpareThreads:用于处理实发请求的空闲线程数# MaxSpareThreads:空闲线程的最大数量# MaxThreads:在同一时间活动的最大线程数# MaxRequestPerChild:一个线程服务请求的最大数量，# 推荐将其设置为0，以实现无限制的接入&lt;IfModule mpm_netware.c&gt;ThreadStackSize 65536StartThreads 250MinSpareThreads 25MaxSpareThreads 250MaxThreads 1000MaxRequestPerChild 0&lt;/IfModule&gt;
# OS/2 MPM# StartServers:启动的服务进程数量# MinSpareThreads:每个进程允许的最小空闲线程# MaxSpareThreads:每个进程允许的最大空闲线程# MaxRequestsPerChild:每个服务进程允许的最大连接数&lt;IfModule mpmt_os2.c&gt;StartServers 2MinSpareThreads 5MaxSpareThreads 10MaxRequestsPerChild 0&lt;/IfModule&gt;
## Listen:允许你绑定Apache服务到指定的IP地址和端口上，以取代默认值# 参见&lt;VirtualHost&gt;指令# 使用如下命令使Apache只在指定的IP地址上监听，# 以防止它在IP地址0.0.0.0上监听## Listen 12.34.56.78:80
Listen 80
## 动态共享支持（DSO）## 为了能够使用那些以DSO模式编译的模块中的函数，你必须有相应的“LoadModule”行，# 因此，在这里包含了这些指令，以便能在使用它之前激活。# 那些静态编译的模块不需要在这里列出 (即以“httpd -l”列出的模块)## 示例：# LoadModule foo_module modules/mod_foo.so#
## ExtendedStatus：当调用“server-status”时，控制Apache是产生“全”状态# 信息（ExtendedStatus On），还是产生基本信息（ExtendedStatus Off）。# 默认为off## ExtendedStatus On
### 第二区：“主”服务配置## 这一区建立被 “主” 服务器用的指令值,以回应那些不被 &lt;VirtualHost&gt;# 定义处理的任何请求。# 这些数值也提供默认值给后面定义的&lt;VirtualHost&gt;容器。# 如果&lt;VirtualHost&gt;中有定义，那么这里定义的指令值将被# &lt;VirtualHost&gt;中的定义所覆盖。#
&lt;IfModule !mpm_winnt.c&gt;&lt;IfModule !mpm_neware.c&gt;## 如果你想使httpd以另外的用户或组来运行，你必须在开始时以root方式启动# 然后再将它切换为你想要使用的用户或组。## User/Group:运行httpd的用户和组# 在SCO (ODT3)上使用“User nouser”和“Group nogroup”# 在HPUX上，你可能不能以nobody身份使用共享内存，建议创建一个www用户。# 注意一些核心（kernel）在组ID大于60000时拒绝setgid(Group)或semctl(IPC_SET)，#节在这些系统上不要使用“Group #-1”。#User nobodyGroup #-1&lt;/IfModule&gt;&lt;/IfModule&gt;
## ServerAdmin:你的邮件地址，当发生问题时Apache将向你发出邮件。# 作为一个出错文档，这个地址显示在server-generated页上，# 例如：admin@your-domain.com#ServerAdmin kreny@sina.com
## ServerName指定Apache用于识别自身的名字和端口号。# 通常这个值是自动指定的，但是我们推荐你显式的指定它以防止启动时出错## 如果你为你的主机指定了一个无效的DNS名，server-generated重定向将不能工作。# 参见UseCanonicalName指令## 如果你的主机没有注册DNS名，在这里键入它的IP地址# 无论如何，你必须使用它的IP地址来提供服务，# 这里使用一种容易理解的方式重定向服务ServerName www.dalouis.com:80
## UseCanonicalName:决定Apache如何构造URLS和 SERVER_NAME 和 SERVER_PORT 的指令。# 当设置为 “Off”时,Apache会使用用户端提供的主机名和端口号。# 当设置为“On”,Apache会使用ServerName指令的值。#UseCanonicalName Off
## DocumentRoot:你的文档的根目录。默认情况下，所有的请求从这个目录进行应答。# 但是可以使用符号链接和别名来指向到其他的位置。#DocumentRoot "/home/redhat/public_html"
## Apache可以存取的每个目录都可以配置存取权限（包括它的子目录）。## 首先，我们配置一个高限制的特征。
# 这将禁止访问文件系统所在的目录，并添加你希望允许访问的目录块。# 如下所示&lt;Directory /&gt;Order Deny,AllowDeny from all&lt;/Directory&gt;
## 注意从这里开始你一定要明确地允许哪些特别的特征能够被使用。# - 所以，如果Apache没有象你所期待的那样工作的话,# 请检查你是否在下面明确的指定它可用。#
## 这将改变到你设置的DocumentRoot#&lt;Directory "/home/redhat/public_html"&gt;
## Options：这个指令的值可以是“None”，“All”，或者下列选项的任意组合：# Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews## 注意，“MultiViews”必须被显式的指定，“Options All”不能为你提供这个特性。## 这个指令既复杂又重要，请参见#“http://httpd.apache.org/docs-2.0/mod...??的信息。#Options FollowSymLinks
## AllowOverride控制那些被放置在.htaccess文件中的指令。# 它可以是“All”，“None”，或者下列指令的组合：# Options FileInfo AuthConfig Limit#AllowOverride None
## 控制谁可以获得服务。#Order allow,denyAllow from all
&lt;/Directory&gt;
## UserDir:指定在得到一个~user请求时将会添加到用户home目录后的目录名。#
UserDir public_html
# 为防止在UserDir指令上的漏洞，对root用户设置# 象“./”这样的UserDir是非常有用的。# 如果你使用Apache 1.3或以上版本，我们强烈建议你# 在你的服务器配置文件中包含下面的行
UserDir disabled root
## 下面是一个使用UserDir指令使一个站点的目录具有只读属性的示例：## &lt;Directory /home/*/public_html&gt;# AllowOverride FileInfo AuthConfig Limit Indexes# Options MultiViews Indexes SymLinksIfOwnerMatch IncludeNoExec# &lt;Limit GET POST OPTIONS PROPFIND&gt;# Order allow,deny# Allow from all# &lt;/Limit&gt;# &lt;LimitExcept GET POST OPTIONS PROPFIND&gt;# Order deny,allow# Deny from all# &lt;/LimitExcept&gt;# &lt;/Directory&gt;
## DirectoryIndex:定义请求是一个目录时，Apache向用户提供服务的文件名## index.html.var文件（一个类型映象文件）用于提供一个文档处理列表，# 出于同样的目的，也可以使用MultiViews选项，但是它会非常慢。#DirectoryIndex index.php index.html index.html.var
## AccessFileName:在每个目录中查询为目录提供附加配置指令的文件的文件名。# 参见AllowOverride指令。#AccessFileName .htaccess
## 下面的行防止.htaccess和.htpasswd文件被Web客户查看。#&lt;Files ~ "^\.ht"&gt;Order allow,denyDeny from all&lt;/Files&gt;
## Typeconfig:定义在哪里查询mime.types文件。#TypeConfig conf/mime.types
## DefaultType:定义当不能确定MIME类型时服务器提供的默认MIME类型。# 如果你的服务主要包含text或HTML文档，“text/plain”是一个好的选择；# 如果大多是二进制文档，诸如软件或图像，你应使用# “application/octer-stream”来防止浏览器象显示文本那样显示二进制文件。#DefaultType text/plain
## mod_mime_magic允许服务器从自己定义自己类型的文件中使用不同的线索（hints），# 这个MIMEMagicFile指令定义hints定义所在的文件。#&lt;IfModule mod_mime_magic.c&gt;MIMEMagicFile conf/magic&lt;/IfModule&gt;
## HostnameLookups：指定记录用户端的名字还是IP地址，例如，本指令为on时# 记录主机名，如http://www.apache.org；为off时记....62.129.132。# 默认值为off，这要比设为on好得多，因为如果设为on则每个用户端请求都将会# 至少造成对 nameserver 进行一次查询。#HostnameLookups Off
## EnableMMAP:控制是否进行内存转储（如果操作系统支持的话）。# 默认为on，如果你的服务器安装在网络文件系统上（NFS），请关闭它。# 在一些系统上，关闭它会提升系统性能（与文件系统类型无关）；# 具体情况请参阅http://httpd.apache.org/docs-2.0/mod...tml#enablemmap## EnableMMAP off
## EnableSendfile:控制是否使用sendfile kernel支持发送文件# （如果操作系统支持的话）。默认为on，如果你的服务器安装在网络文件系统# （NFS）上，请你关闭它。# 参见http://httpd.apache.org/docs-2.0/mod...enablesendfile## EnableSendfile off
## ErrorLog:错误日志文件定位。# 如果你没有在&lt;VirtualHost&gt;内定义ErrorLog指令，这个虚拟主机的错误信息# 将记录在这里。如果你在那儿定义了ErrorLog，这些错误信息将记录在你所# 定义的文件里，而不是这儿定义的文件。#ErrorLog logs/error_log
## LogLevel:控制记录在错误日志文件中的日志信息数量。# 可能的值包括：debug，info，notice，warn，error，crit，alert，emerg。#LogLevel warn
## 下面的指令为CustomLog指令定义格式别名。#LogFormat "%h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\"" combinedLogFormat "%h %l %u %t \"%r\" %&gt;s %b" commonLogFormat "%{Referer}i -&gt; %U" refererLogFormat "%{User-agent}i" agent
# 你需要安装了mod_logio.c模块才能使用%I和%O。# LogFormat "%h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
## 指定接入日志文件的定位和格式（一般日志格式）。# 如果你没有在&lt;VirtualHost&gt;内定义这个指令，传输信息将记录在这里，# 如果你定义了这个指令，则记录在你指定的位置，而不是这儿定义的位置。#CustomLog logs/access_log common
## 如果你想要记录agent和referer信息，可以使用下面的指令## CustomLog logs/referer_log referer# CustomLog logs/agent_log agent
## 如果你想要使用一个文件记录access，agent和referer信息，# 你可以如下定义这个指令：## CustomLog logs/access_log combined
## ServerTokens# 这个指令定义包含在HTTP回应头中的信息类型。默认为“Full”，# 这表示在回应头中将包含模块中的操作系统类型和编译信息。# 可以设为列各值中的一个：# Full | OS | Minor | Minimal | Major | Prod# Full传达的信息最多，而Prod最少。#ServerTokens Full
## 随意的添加包含服务器版本和虚拟主机名字一行信息到server-generated输出页中# （内部错误文档，FTP目录列表，mod_status和mod_info输出等等，除了CGI错误# 或自定义的错误文档以外）。# 设为“EMail”将包含一个指向ServerAdmin的mailto:连接。# 可以为如下值：On | Off | EMail#ServerSignature On
## Aliases:在这时添加你需要的别名，格式如下：# Alias 别名 真实名## 注意，如果你在别名的未尾包含了“/”，那么在URL中也需要包含“/”。# 因此，“/icons”不是这个示例中的别名。# 如果别名中以“/”结尾，那么真实名也必须以“/”结尾，# 如果别名中省略了结尾的“/”，那么真实名也必须省略。## 我们使用别名“/icons/”来表示FancyIndexed目录列表，如果你不使用、# FancyIndexing，你可以注释掉它。## Alias /icons/ "/usr/local/apache2/icons/"
# &lt;Directory "/usr/local/apache2/icons"&gt;# Options Indexes MultiViews# AllowOverride None# Order allow,deny## Allow from all# &lt;/Directory&gt;
## 这将改变ServerRoot/manual。这个别名提供了手册页所在的位置，# 即使你改变了你的DocumentRoot。如果你对有无手册页并不在意的话，# 你可以注释掉它。#Alias /manual "/usr/loacl/apache2/manual"
&lt;Directory "/usr/local/apache2/manual"&gt;Options Indexes FollowSymLinks MultiViews IncludesNoExecAddOutputFilter Includes htmlOrder allow,denyAllow from all&lt;/Directory&gt;
## ScriptAlias:指定包含服务脚本的目录。# ScriptAliases 本质上与Aliases一样，除了这里的文档在请求时做为程序处理处理以外。# 尾部的“/”规则与Alias一样#ScriptAlias /cgi-bin/ "/usr/loacl/apache2/cgi-bin/"
# 这里是添加php 4支持的指令AddType application/x-httpd-php .phpLoadModule php4_module modules/libphp4.so
&lt;IfModule mod_cgid.c&gt;## 添加mod_cgid.c设置，mod_cgid提供使用cgid进行通讯的UNIX套接字的# 脚本接口路径。## Scriptsock logs/cgisock&lt;/IfModule&gt;
## 将"/usr/local/apache2/cgi-bin"改为你的ScriptAliased指定的CGI目录，# 如果你配置了的话。#&lt;Directory "/usr/local/apache2/cgi-bin"&gt;AllowOverride NoneOptions NoneOrder allow,denyAllow from all&lt;/Directory&gt;
## Redirect允许你告诉客户端使用存在于服务器名字空间中的文档，# 而不是现在的，这帮助客户定位那些改变了位置的文档。# 例如：# Redirect permanent /foo http://www.example.com/bar
## 控制server-generated目录列表显示的指令#
## IndexOptions:控制server-generated目录列表显示特征。#IndexOptions FancyIndexing VersionSort
## AddIcon* 指令告诉服务器不同扩展名的图象文件如何显示，# 只适用于FancyIndexed指令#AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzipAddIconByType (TXT,/icons/text.gif) text/*AddIconByType (IMG,/icons/image2.gif) image/*AddIconByType (SND,/icons/sound2.gif) audio/*AddIconByType (VID,/icons/movie.gif) video/*
AddIcon /icons/binary.gif .bin .exeAddIcon /icons/binhex.gif .hqxAddIcon /icons/tar.gif .tarAddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .ivAddIcon /icons/compressed.gif .Z .z .tgz .gz .zipAddIcon /icons/a.gif .ps .ai .epsAddIcon /icons/layout.gif .html .shtml .htm .pdfAddIcon /icons/text.gif .txtAddIcon /icons/c.gif .cAddIcon /icons/p.gif .pl .pyAddIcon /icons/f.gif .forAddIcon /icons/dvi.gif .dviAddIcon /icons/uuencoded.gif .uuAddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tclAddIcon /icons/tex.gif .texAddIcon /icons/bomb.gif core
AddIcon /icons/back.gif ..AddIcon /icons/hand.right.gif READMEAddIcon /icons/folder.gif ^^DIRECTORY^^AddIcon /icons/blank.gif ^^BLANKICON^^
## DefaultIcon 为那些没有显式定义图标的文件提供处理#DefaultIcon /icons/unknown.gif
## AddDescription允许你在server-generated索引后放置一个简短的说明。# 只对FancyIndexed指令有效。# 格式：AddDescription "说明" 文件名## AddDescription "GZIP compressed document" .gz# AddDescription "tar archive" .tar# AddDescription "GZIP compressed tar archive" .tgz
## ReadmeName指定服务器默认查找的README文件的名字，并添加到目录列表中## HeaderName指定目录列表前缀文件的文件名ReadmeName README.htmlHeaderName HEADER.html
## IndexIgnore指定目录索引忽略并且不包含在列表中的文件名集合，# 支持shell类型的通配符。#IndexIgnore .??* *~ *# HEADER* README* RCS CVS *,v *,t
## AddEncoding允许你在信息传送中使用(Mosaic/X 2.1+)解压缩信息，# 注意：不是所有的浏览器都支持这个选项。# 尽管名字相似，但是下列的指令与上面的FancyIndexing定制指令不同。#AddEncoding x-compress ZAddEncoding x-gzip gz tgz
## DefaultLanguage和AddLanguage允许你指定文档的语言。# 这使你可以让用户用容易理解的语言浏览文档。## 指定默认的语言，这意味着所有没有指定语言的包都将使用该语言。# 多数情况下，你也许并不想设置它，除非你确信这样做是正确的。# 通常，不使用确定的语言比使用错误的语言要好。## DefaultLanguage nl## 注意1：作为语言关键字的词缀毫无疑问是不能一样的--采用波兰# 文的文档（网络标准语言代码是pl）将希望使用“AddLanguage pl .po”# 来避免与perl脚本的一般词缀产生二义性。## 注意2: 下面的例子举例说明在一些范例中语言的二字符缩写与它的国家# 的二字符缩写不相同,例如 “Danmark/dk” 和 “Danmark/da” 的比较.## 注意3: 在 “ltz” 的情况下我们使用三字符词缀，违犯了 RFC的规定，# 运行中将修复它并使用RFC1766标准取得参考数据。## Danish (da) - Dutch (nl) - English (en) - Estonian (et)# French (fr) - German (de) - Greek-Modern (el)# Italian (it) - Norwegian (no) - Norwegian Nynorsk (nn) - Korean (ko)# Portugese (pt) - Luxembourgeois* (ltz)# Spanish (es) - Swedish (sv) - Catalan (ca) - Czech(cz)# Polish (pl) - Brazilian Portuguese (pt-br) - Japanese (ja)# Russian (ru) - Croatian (hr)#AddLanguage da .dkAddLanguage nl .nlAddLanguage en .enAddLanguage et .etAddLanguage fr .frAddLanguage de .deAddLanguage he .heAddLanguage el .elAddLanguage it .itAddLanguage ja .jaAddLanguage pl .poAddLanguage ko .koAddLanguage pt .ptAddLanguage nn .nnAddLanguage no .noAddLanguage pt-br .pt-brAddLanguage ltz .ltzAddLanguage ca .caAddLanguage es .esAddLanguage sv .svAddLanguage cz .czAddLanguage ru .ruAddLanguage tw .twAddLanguage zh-tw .twAddLanguage hr .hr
# LanguagePriority允许你在会话过程中优先使用一些语言。## 以优先次序递减的方式列出它们。我们或多或少地采用按字母排列顺序的方式# 排列它们。也许你想要改变这个顺序。LanguagePriority en da nl et fr de el it ja ko no pl pt pt-br ltz ca es sv tw
## ForceLanguagePriority 允许你为MULTIPLE CHOICES(Prefer)[在通讯的情况下]# 或NOT ACCEPTABLE(Fallback)[没有可接受的语言匹配的情况]提供一个结果页。#ForceLanguagePriority Prefer Fallback
## 为发送出的所有页指定默认的字符集，这总是一个好主意，并且为你的# web站点的国际化打开了大门，这不正是你曾经想要的吗。同样地，指定# 默认字符集有一些小的损害，如一个使用iso-8859-1(latin1)标准命令# 的页面，除非以别的方式指定例如你仅仅以显式方式声明它。# 也有一些与那些总是鼓励你使用默认字符集的javascropt和URL语法有关# 的浏览器安全原因。##AddDefaultCharset ISO-8859-1AddDefaultCharse GB2312
## 一般以文件扩展名的方式使用字符集。也许你想要避免与语言扩展发生# 碰撞，除非你在每次改变后都做了很好的测试。# 参见http://www.iana.org/assignments/char...??得字符集# 的名字列表和它们各自的RFCs。#AddCharset ISO-8859-1 .iso8859-1 .latin1AddCharset ISO-8859-2 .iso8859-2 .latin2 .cenAddCharset ISO-8859-3 .iso8859-3 .latin3AddCharset ISO-8859-4 .iso8859-4 .latin4AddCharset ISO-8859-5 .iso8859-5 .latin5 .cyr .iso-ruAddCharset ISO-8859-6 .iso8859-6 .latin6 .arbAddCharset ISO-8859-7 .iso8859-7 .latin7 .grkAddCharset ISO-8859-8 .iso8859-8 .latin8 .hebAddCharset ISO-8859-9 .iso8859-9 .latin9 .trkAddCharset ISO-2022-JP .iso2022-jp .jisAddCharset ISO-2022-KR .iso2022-kr .kisAddCharset ISO-2022-CN .iso2022-cn .cisAddCharset Big5 .Big5 .big5# 对于俄语，使用了多个字符集（如何使用主要依靠客户端）：AddCharset WINDOWS-1251 .cp-1251 .win-1251AddCharset CP866 .cp866AddCharset KOI8-r .koi8-r .koi8-ruAddCharset KOI8-ru .koi8-uk .uaAddCharset ISO-10646-UCS-2 .ucs2AddCharset ISO-10646-UCS-4 .ucs4AddCharset UTF-8 .utf8
# 下面的字符集没有映射到一个特定的标准(iso)上，但是它们在浏览器# 中被广泛的支持。注意那些大写字母。# (它不应该,但是它是为兼容一些浏览器而做)## 参见http://www.iana.org/assianments/character-sets以取得# 它们的列表。但是浏览器支持较少。#AddCharset GB2312 .gb2312 .gbAddCharset utf-7 .utf7AddCharset utf-8 .utf8AddCharset big5 .big5 .b5AddCharset EUC-TW .euc-twAddCharset EUC-JP .euc-jpAddCharset EUC-KR .euc-krAddCharset shift_jis .sjis
## AddType允许你为指定的文件类型添加或覆盖mime.types文件中配置的MIME#AddType application/x-tar .tgzAddType image/x-icon .ico
## AddHandler允许你映射确定的文件扩展名到“handlers”:# 与文件类型无关的行为。这既能编译到服务器中也可以添加到Action指令# 中（看下面）。# 为了在ScriptAliased指令指定的以外使用CGI脚本：#（要使它可用，你还需要在Options中添加“ExecCGI”。## AddHandler cgi-script .cgi
## 对于那些包含他们自己的HTTP头的文件## AddHandler send-as-is asis
## 对于server-parsed imagemap文件：## AddHandler imap-file map
## agemap 文件:##AddHandler imap- 文件映像
## 对于类型映像转移资源)#(这是默认的设定以允许Apache的“It Worked”页能多种语言分发)。#AddHandler type-map var
## 过滤器允许你在将它发送到客户端前进行处理。## 为了在服务器端分析包含(SSI)的.shtml文档：# （要执行这个指令，你还需要在Options指令中添加“Includes”。）## AddType text/html .shtml# AddOutputFilter INCLUDES .shtml
## Action让你定义当调用匹配的媒体文件时将要执行的脚本。这将减少# 那些经常使用的CGI脚本的URL路径名的重复输入。# 格式：Action media/type /cgi-script/location# 格式：Action handler-name /cgi-script/location#
## 可配置的错误应答有三种风格：# 1）plain text 2)local redirects 3) external redirects## 一些示例：# ErrorDocument 500 "The server made a boo boo."# ErrorDocument 404 /missing.html# ErrorDocument 404 "/cgi-bin/missing_handler.pl"# ErrorDocument 402 http://www.example.com/subscription_info.html#
## 综合应用这些指令，我们可以创建一个国际化的出错应答。## 我们使用Alias来重定向任意/error/HTTP_&lt;error&gt;.html.var应答到# 我们的多语言错误消息集合。使用正确的文本替代它。## 通过加入下面的行，你就能够改变这些消息的显示，而不必改变# HTTP_&lt;error&gt;.html.var文件。## Alias /error/include/ "/your/include/path/"## 以将/usr/local/apache2/error/include/下的文件拷贝到/your/inclue/path/下# 开始，你可以创建你自己的文件集合，甚至是其于每个虚拟主机的。# 不管你的ServerSignature如何设置，默认的包含文件将显示你的# Aapche版本号和你的ServerAdmin邮件地址## 国际化的错误文档需要mod_alias，mod_include和mod_negotiation三个# 模块。要激活它们，取消下面30行的注释符号
# Alias /error/ "/usr/local/apache2/error/"## &lt;Directory "/usr/local/apache2/error"&gt;# AllowOverride None# Options IncludesNoExec# AddOutputFilter Includes html# AddHandler type-map var# Order allow,deny# Allow from all# LanguagePriority en de es fr it nl sv# ForceLanguagePriority Prefer Fallback# &lt;/Directory&gt;## ErrorDocument 400 /error/HTTP_BAD_REQUEST.html.var# ErrorDocument 401 /error/HTTP_UNAUTHORIZED.html.varErrorDocument 403 /error.php# ErrorDocument 404 /error/HTTP_NOT_FOUND.html.var# ErrorDocument 405 /error/HTTP_METHOD_NOT_ALLOWED.html.var# ErrorDocument 408 /error/HTTP_REQUEST_TIME_OUT.html.var# ErrorDocument 410 /error/HTTP_GONE.html.var# ErrorDocument 411 /error/HTTP_LENGTH_REQUIRED.html.var# ErrorDocument 412 /error/HTTP_PRECONDITION_FAILED.html.var# ErrorDocument 413 /error/HTTP_REQUEST_ENTITY_TOO_LARGE.html.var# ErrorDocument 414 /error/HTTP_REQUEST_URI_TOO_LARGE.html.var# ErrorDocument 415 /error/HTTP_SERVICE_UNAVAILABLE.html.var# ErrorDocument 500 /error/HTTP_INTERNAL_SERVER_ERROR.html.var# ErrorDocument 501 /error/HTTP_NOT_IMPLEMENTED.html.var# ErrorDocument 502 /error/HTTP_BAD_GATEWAY.html.var# ErrorDocument 503 /error/HTTP_SERVICE_UNAVAILABLE.html.var# ErrorDocument 506 /error/HTTP_VARIANT_ALSO_VARIES.html.var
## 下面的命令更改标准的HTTP应答行为以处理己知的浏览器问题。#BrowserMatch "Mozilla/2" nokeepaliveBrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0BrowserMatch "RealPlayer 4\.0" force-response-1.0BrowserMatch "Java/1\.0" force-response-1.0BrowserMatch "JDK/1\.0" force-response-1.0
## 下面命令关闭对那些没有尾部“/”的目录的非GET请求的重定向，# 这些命令修复了微软的采用DAV方法不能正确处理重定向的WEB文件夹的问题。# Apple下的DAV文件系统和Gnome下的VFS对DAV的支持也是采用这样的方法# 进行处理的。#BrowserMatch "Microsoft Data Access Internet Publishing Provider" redirect-carefullyBrowserMatch "^WebDrive" redirect-carefullyBrowserMatch "^WebDAVFS/1.[012]" redirect-carefullyBrowserMatch "^gnome-vfs" redirect-carefully
## 允许你使用URL：http://servername/server-status来通过mod_status生# 成并报告服务器状态信息。改变.example.com为你自己的域名。## &lt;Location /server-status&gt;# SetHandler server-status# Order deny,allow# Deny from all# Allow from .example.com# &lt;/Location&gt;
## 允许使用URL:http://servername/server-info来远箮.??配置信息# （需要mod_info.c支持）。改变“.example.com”为你自己的域名。## &lt;Location /server-info&gt;# SetHandler server-info# Order deny,allow# Deny from all# Allow from .example.com# &lt;/Location&gt;
## 代理服务器命令，去掉下面的行使代理服务可用。## &lt;IfModule mod_proxy.c&gt;# ProxyRequests On# &lt;Proxy *&gt;# Order deny,allow# Deny from all# Allow from .example.com# &lt;/Proxy&gt;
## 安装或关闭HTTP/1.1“通道”头处理。# （“Full”添加服务器版本信息，“Block”移掉所有输出“通道”头信息。# 可以设为下面各选项之一：Off | On | Full | Block## ProxyVia On
# 最好为代理服务安装高速缓冲，去掉下面几行的注释符号：# （没有CacheRoot则不缓冲）## CacheRoot "/usr/local/apache2/proxy"# CacheSize 5# CacheGcInterval 4# CacheMaxExpire 24# CacheLastModifiedFactor 01# CacheDefaultExpire 1# NoCache a-domain.com another-domain.edu joes.garage-sale.com
# &lt;/IfModule&gt;# 代理命令结束。
## 附加的特定模块配置。#&lt;IfModule mod_ssl.c&gt;Include conf/ssl.conf&lt;/IfModule&gt;
## 第三区：虚拟主机## VirtualHost:你可以通过设置虚拟主机容器以实现在你的主机上保有多个# 域名/主机名。大多数配置信息只使用基于名字的虚拟主机，因此服务器# 不必担心IP地址的问题，下面的命令以*号代替虚拟主机名。## 在你试着配置你的虚拟主机以前，请参见# URL:http://httpd.apache.org/docs-2.0/vhosts/&gt;以取得更多的信息。## 你可以使用命令行选项“-S”来检验你的虚拟主机配置。
## 使用基于名字的虚拟主机。## NameVirtualHost *
## 虚拟主机示例：# 几乎所有的Apache命令都可以在虚拟主机容器中使用。# 第一个虚拟主机区是用于向服务名未知的请求进行应答的配置。## &lt;VirtualHost *&gt;# ServerAdmin webmaster@dummy-host.example.com# DocumentRoot /www/docs/dummy-host.example.com# ServerName dummy-host.example.com# ErrorLog logs/dummy-host.example.com-error_log# CustomLog logs/dummy-host.example.com-access_log commom# &lt;/virtualHost&gt;

日志标题：在linux下安装星际译王
发表时间：2006-5-13 14:30:00
日志内容：
谁怪咱的英文学的不好，看英文有好多都不认识！只好求助于词典。在windows 下有金山词霸，linux有星际译王！
      下面说一下在linux安装星际译王的具体步骤：
      首先到她的官方网站下载：
      1：Main Program有rpm包，还有源程序。看自己的喜好下载。
      2：词典：有好多，选择自己需要的。
      3：声音文件；
    安装： 1主程序：
           如果是rpm包则是：rpm -ivh stardict-2.4.7-1.i386.rpm
               如果是源码则是：
                       1&gt; tar -xjvf stardict-2.4.7.tar.bz2   解压文件。
                       2&gt;cd stardict-2.4.7   #在这个文件夹下有个说明文件 INSTALL     3&gt; export PKG_CONFIG=`which pkg-config`     4&gt;./configure--prefix=/usr--sysconfdir=/etc--mandir=/usr/share/man
                      5&gt;make
                      6&gt;make install
        2字典安装：
              tar -xjvf a.tar.bz2
              mv a /usr/share/stardict/dic # a代表字典文件名称
       3声音：tar -xjvf WyabdcRealPeopleTTS.tar.bz2
              mv WyabdcRealPeopleTTS  /usr/share/
    好了，大功告成！



日志标题：vi-cheat-sheet
发表时间：2006-5-13 16:38:19
日志内容：#isubb#[IMG]http://sunliguo.ik8.com/images/linux/vi-vim-cheat-sheet.gif[/IMG]
原图见：
[URL=http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html]http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html[/URL]

日志标题：如何系统的学习linux
发表时间：2006-5-20 21:50:56
日志内容：如何系统的学习linuxlinux太难用了!(一通鼠标点击，进入/etc)学习linux,你忘记windows的思维方式了吗？怎么安装软件阿？那一堆文件是干什么的阿？学习linux,你还在浮躁吗？进入linux,随便按了几下.赶紧重启进入win学习linux,你用心了吗？.......你我共勉之
作者:GuCuiwen emailin2linux@163.com转载于：http://www.linuxfans.org/nuke/modul...ewtopic&amp;t=96793
版权声明:本文档可以在网络上在非商业范围内自由转载,转载请注明出处如果转载版面包含商业广告,请向作者支付至少每千字100园的稿费以书面,书籍形式转载和出版请按至少每千字100园人民币的标准向作者支付稿费
首先,我想引用一下别人说过的一句话:除非在过去的十年你一直生活在山洞里,否则你一定听说过linux.
是的,现在听说过linux,会一点linux基本操作的人多如牛毛,然而真正能用linux做一点事情的确少之又少,这就造成了现在的状况:各大 linux论坛十分热闹,但我国linux人材却还十分紧缺.到底是什么原因造成了这样的状况? 纠其原因,只有两个字:浮燥!
如果在论坛里来一次调查投票,看一下在论坛里的人到底有多少人手头有一本以上的正规linux教材.我想这个数字不会超过30%. 如果再问一下,有多少人完整的读过各发行版自带的入门文档,系统定制文档,系统管理文档和系统安全文档,恐怕这个数字不到10%. 如果进一步再调查一下究竟有多少人静下心来学习过操作系统和计算机网络等和linux学习十分密切的专业课程,那么恐怕只有3%的数字都不到了.
这让我想到了98年前后IT泡沫时代的中关村.在中关村的大街小巷,到处是一个个意气分发牛哄哄的IT精英.他们戴着默镜,剔着小平头,张口闭口都是网络,安全,信息,黑客,代码,产业.T恤背后写着三个字:别惹我! 然而最后IT泡沫一过,只有那些真正肯安安心心静心学习的人在IT界存活了下来.
现在国人学习linux的状况也是这样,学linux的人个个都意气分发,以为学习linux会用linux是多么了不起.学了一点皮毛就认为很牛了.但是那些企业用人单位却很难找到真正适合的linux人材.因此,我想就目前的状况发表一下我的看法.
首先,这篇文章是写给那些想成为linux高手,并真正想用linux做些事情的人.如果你只想做一个菜鸟,没事的时候在你双系统启动的电脑上偶尔选一次 linux,然后没事进去偷着乐,那就请你自便.另外,我想说明,和真正的牛人比起来,我自己还处于一个比较低的水平.我没有读过内核源代码,不知道 linux工作原理等等,但是通过摸索,至少我已经找到了通往高手的道路的方向.因此还是想说两句.
1,linux不是玩具
如果你想系统的学习linux,你必需清楚的认识到这一点.现在有很多人,号称是linux爱好者,但是他们大部分的事情还是用windows 做,而linux只是作为一个随便玩玩的系统.他们懂得一些linux的基本操作,知道有linux这个玩艺,也因为经常听人家说linux好就咬定了 linux就是好.只要有人说linux比windows差,那么他们就奋起反驳,他们也看不起用windows的人,认为用windows的人水平低. 但是自己用电脑的大部分时间还是用windows并且把重要的文件都放在了windows分区,因为他们骨子里只把linux当做玩具,没有真正领悟 linux的精髓所在.如果你真正想系统的学习linux,想用linux有所作为,那么请忘记windows的思维方式,慢慢感受和习惯linux的操作方式,总有一天你会真正体验到他的奥妙所在,从而从自己内心深处喜欢他,使用他,而不是为了赶时髦或向人炫耀而使用他.
2,手头有一本好的入门教材吗
"如果你还没有好好的读完过一本linux安装及入门教材就不要到初学者论坛来问题!因为你连问问题的资格都没有! " 这是我的一个比较偏激的观点.
如果你现在开始下决心学习linux了,那么第一件你要做的事情是到书店去挑一本好书.而不是到论坛社区去问该用什么版本,该如何学习 linux.一本好的入门教材可以让你快速领悟linux的操作方式,系统的基本使用等等.而且都是前人总结经验写出来的,他可以帮你搭起一个学习 linux的框架,对linux有一个总体的认识.就好比建一撞大楼前先打好地基,搭好混凝土框架.以后就可以慢慢往这个框架里添砖加瓦,最后建起大楼. 而那些想急于学习的,不想看书,只想靠混论坛来学习linux知识的人,就好比建一撞大楼,今天建好第一层,然后第一层就要全部粉刷好,装修好,家具买好住进去,然后第二天再开始建第二层.这样没有整体规划的学习是学不好linux的,最后的结果是浪费自己的时间,也浪费别人的时间. 如果你不信,可以让实事去告诉你,以一年为限,你和你的一个朋友同时从0开始学linux,计算机基础差不多.你去买几本好书自己慢慢看边看边做实验,让你的朋友整天到各大论坛瞎混零散的学些linux知识.也许一开始,你的朋友会比你懂得多,但是一年以后你的水平肯定在你的朋友之上. 在初学阶段,不要随便在论坛上发问,多看书是根本,即使真的非问不可的问题,也要先自己动手察资料解决.实在不行再来问,高手不会鄙视菜鸟,因为每一个高手都是从菜鸟过来的,他们都知道菜鸟的苦衷.但是高手会看不起那些自己不愿动手动脑不会学习解决问题而只想得到现成答案的人.那样的人会被高手在心里暗骂成不配用linux的蠢货.
你需要以下几种书:一本好入门教材-&gt;一本linux指令参考手册-&gt;linux系统管理手册-&gt;讲解linux系统原理的书.
一开始,你只需要入门教材就可以了.并且严格安教材的讲解去学习,不要一天到晚想着去装显卡驱动啦,装游戏啦,装软件啦,这些都没有必要.你就当你自己的电脑不能上网,只能通过看书学习.慢慢看书,稳抓稳打.慢慢地就融会贯通了.这时候你再到linux初学者论坛去看看,你在那里早已经是高手了.
另外,一开始你要选定一本入门教材,但是不能只看一本,因为有些书上讲的,可能是另外的书上没有的.因此,重点选一本教材看完.然后再看两三本入门教材浏览一下.作为对第一本书的知识的扩充和巩固. 在看书过程中,如果你有什么不懂的,不要急于上论坛问,自己认真看几次,实在不懂没有关系,把问题放在那里.不要钻牛角尖不懂不肯放手,这种精神是好的, 但是方法是错误的.你尽管学下去,也许你看完书本以后的内容,就对前面不懂的内容豁然开朗了.这是在学习linux中常有的情况.
另外,现在很多入门书籍是针对非技术型用户的.(我把那些对linux本身不感兴趣,只想用他来上网,听音乐和打字的人称为非技术型用户,而把对linux本身感兴趣的人称为技术用户)这些针对非技术型用户的入门书籍几乎通篇都是插图,讲解的内容都是如何在图形界面下操作.这些书籍并不能帮你成为一个高手.反而会让你养成倚赖鼠标和图形界面操作的习惯以后很难改掉.因此不能看这些书,一定要买那些一开始就从系统基本机构基本命令开始讲解的书籍.我看过的第一本linux入门书籍共有十多章,但是他从第十一章开始才大致的讲解了一下图形界面的知识.我很感谢这本书,让我一开始就脱离了windows的思维方式,给我以后的进一步学习带来了很大帮助.
完成以上的内容,你就完成了建大楼打地基建混凝土框架的过程了.可以接下来进一步学习了.
3,你看完系统自带的文档了吗?
当你完成入门的过程后,就可以开始读其他的文档,然后到论坛的精华区看看,向你建起来的大楼框架中添砖头了.当然 ,首先要读的,还是系统自带的文档.
绝大多数linux发行版都自带非常详细的文档.比如我一直在用的redhat,他有从系统安装到系统安全,针对不同层次的人的详尽文档.静下心来,把这些文档读完,比看任何论坛的精华区都有用.书籍和文档就好比是你每天都离不开的一日三餐,论坛区的精华文档就好比是点心和水果.你可以不吃点心和水果,但是决不能不吃正餐.
当然,不能为看文档而看文档,你一定要边看边安文档中说的做试验验证.这样才印象深刻,否则看过就忘记了等于没有看.
另外,如果真心想学习linux就不要吝啬,也不要害怕丢失数据而不敢做实验.我建议你去买一个小的二手硬盘,然后放开手干.不要怕丢失数据而不敢做,如果你没有学会技能,将来做了linux系统管理员或者网络管理员到那时因为不会而丢了数据就是大事情了.
4,学习linux不是逛自由市场.
经常看到有人问用什么版本的linux好,其实只要你认真学习无论什么版本都挺好的.要知道,开发linux发行版的人都是通读过linux内核代码,对 linux原理极其精通的人,而且每一个开发团队都对他的发行版做过测试后放出的.那些国际知名的大品牌更是如此. 因此,讨论什么版本好并无意义,关键是你是不是真心想学.不过,为了避免曲高和寡,最好选用的人多的版本,比如redhat manrake suse 等等. 国内有一两个linux版本做的也不错,但是国内的linux都是面向非技术型用户开发的,因此,如果你想成为高手,建议不要用国内的版本.学习linux不是逛自由市场,选定版本就要静下心来学习.不要今天换版本明天要升级.这样对你没有好处.我见过一些人号称用过十几种甚至几十种 linux,向人谈论起来头头是到,好像懂的很多,但是如果你让他去用linux搭建一个web服务器,做一个linux网关,他就什么都不会了.他们把时间都浪费在了版本的转换上了.
5,你能看懂英文文档吗?
谈论这个问题,我有点低气不足,因为我自己的英语很差.但是,至少我可以无障碍的读完一般的计算机文档.计算机英语很简单,只要熟悉了计算机专业英语,高中毕业的水平就可以轻松的阅读计算机文档了.如果你的英语实在太差了,连最简单的计算机英语文档都看不懂,那么在学习linux的同时,请赶紧学习英语. 也许你说,你可以看翻译的文档,当我还是一个菜菜鸟的时候,也是这样认为的.但是,后来才发现,如果你想深入学习linux,看不懂因为文档实在是太难了.写的最好的,最全面的文档都是英语写的,最先发布的技术信息也都是用英语写的.即便是非英语国家的人发布技术文档,也都首先翻译成英语在国际学术杂志和网络上发表.你去看看各大软硬件生产商的官方网站,有哪一个不是用英语作为其主站的? 长期用windows的人会很不习惯这一点,装个软件还要看半天文档,应为windows用起来实在太简单了.但是如果你想学习linux就必需学会看各种文档,而大部分的文档都是用英语写的.我发现很多人甚至连man文档都不会看,有什么命令不会用了就跑到论坛上来问,还装出一副可怜相,乞讨一个命令的用法.有这些时间还不如自己看看man文档,即使你一个一个单词的翻译成中文再自己看都比问别人强,因为别人的回答再怎么详尽都比不上man文档详尽.安装一个新的软件时先看README,再看INSTALL然后看FAQ,最后才动手安装,这样遇到问题就知道为什么.否则,说明文档都不看,结果出了问题再来找答案反而浪费时间! 古人说欲速则不达就是这个道理!
6,忘记windows的思维方式
思想性的转变比暂时性的技术提高更有用,因为他能帮助你加快学习速度.现在很多人用linux.但是,他们用linux的方式完全是 windows的那一套方式.骨子里都是windows的思想.这样是不能领悟linux的精髓体验不到他的优越性的.我前几天看到一个朋友要把刚装了不到2天的mandrake 10 删除掉,我问他为什么,他说太慢了,受不了,还是用windows快.然后我留意了一下他用linux的方式,他的所有操作都带着windows的影子. 他连最基本的删除,移动文件这样的操作都要用鼠标,这样当然慢了!最后我只好说,你删除吧,你不适合用linux,linux不是这样用的.各位可以去看看那些linux高级用户,他们是怎样操作的.通常他们都是在X上开一个xterm或者rxvt终端,80%以上的操作都在这个终端下用命令完成,因为 linux的命令行十分强大,速度也十分快,简单的几个命令的组合就能完成非常复杂的操作.举一个例子:linux的常用命令find,去看看man文档,初学者一定会觉得太复杂而不原意用,但是你一旦学会了就对他爱不释手.他的功能实在太强了,在配合exec参数或者通过管道重定向到xargs命令和 grep命令,那么他能完成非常复杂的操作,如果同样的操作你用图形界面的工具来完成,恐怕要多花十几陪的时间.因此linux高手经常会说:如果没有 find和grep我们还怎么活.但是现在大部分的linux初级用户受到windows影响都喜欢用图形界面的工具来完成一些基本的操作,我并不是说图形界面不好.只是由于linux和windows设计思想的不同他们的操作方式也有很大不同.在windows下用图形界面操作会比敲命令快,但是 linux是一个命令行组成的操作系统,他的精髓在命令行! 无论图形界面发展到什么水平这个原理是不会变的!
7,入门以后多学命令
当你看完了一两本入门书籍后就应该扩充自己的知识,多学习linux命令,但是不要在初学阶段就系统的学习linux命令,初学阶段只要学会书上提到过的命令就可以了.单靠学习各种命令而成为高手是不可能的,但不会命令而成为高手也是不可能的.这就好比学英语,什么语法都不懂,只捧着单词手册背单词是学不会英语的,但是没有单词词汇量英语水平也提不高的.
在linux中学习命令的最好办法是学习bash脚本编程.bash脚本比起其他语言来学习简单,但是功能却十分强大.通过学习bash编程,能让你掌握大量的linux命令.另外,买一本命令参考手册是必要的,遇到不知道怎么用的命令可以随时查询,这要比察man文档快.特别适合英语不好,看不懂man 文档的人.
在linux中,命令可分为系统基本命令和应用程序命令.系统基本命令是所有的unix类系统都支持的命令,走到哪都不变,只要是unix类系统上就肯定有.比如ls,rm,rmdir,cp,cd,mv,cat等等.这样的基本命令大约有200个,这些命令是一定要掌握的,我买了一本&lt; redhat 7 指令参考手册&gt;这本书非常好,他根据命令的常用指数分类,标明3颗星的为最常用命令,一定要掌握,两颗星的其次,1颗星的只要知道一下就可以了虽然现在都已经FC3了,但是经典的UNIX基本命令几十年来都没有变过!另外有些命令是linux特有的或者是某一个应用程序的可执行文件比如xmms播放器.这些只要知道就可以了,不知道也无所谓.有些命令比较少用,因此通常都记不住他的用法,对于这些命令至少要知道有这个命令,脑子里有印象,需要用的时候察一下手册就可以了,但是决不能不知道这个命令的存在!
8,学会管理系统
等到有了基本知识,也掌握了一定量的命令用法后,就可以进一步学习管理系统.这些内容入门书上会有,但是不会很深入.要深入的学习系统管理,就要去买一本类似之类的书.认真的看书并做实验,可以让你很快的进步.学习配置各种网络服务器,用linux搭建网络,这些都是学习linux系统管理和网络管理的好方法. 到了这个阶段就可以经常上网察察资料,看发布软件的官方网站文档和FAQ,看看论坛精华区文章.但是不能本末倒置,多看书还是根本.书籍和官方文档可以让你系统的学习,但是论坛可以让你学到一些小知识,小技巧.我本人也经常到论坛上来看看,因为即便是一个新手,也可能会发现一些你所不知道的小技巧,看论坛可以学到这些小技巧.但是我看文档和看论坛的时间比不会小于4:1 . 可以把平时积累的问题一次在论坛上发问. 但是初学的时候不要频繁上论坛,因为你要问的问题都在书上写着,耐心一点,你很快就能看到了.
9,了结系统结构
等你有了一定的系统管理知识,知道了/etc下那些配置文件有什么用,知道了一般的网络服务器如何配置后,就可以去了解系统结构了. 了解系统结构不是要你去看什么文件夹放什么内容,而是要学习一些原理性的东西.比如系统是如何引导的,引导后启动了那些东西.系统中哪些是最基本的库文件,有什么用等等.学习系统结构的最好方法是自己做一个linux系统,再也没有什么能比自己做一个linux系统更能学习系统结构的了.LFS (linux from strach)可以教你从源代码自己编译一个系统.通过自己编译一个系统,你就可以了结linux系统结构,知道哪些文件是干什么用的,以及他们如何协调工作.当然,在你达到LFS水平之前还有很多事情要做,比如学会如何编译安装源代码发布的软件和编译新的内核等等.到了LFS水平,那么在大多数 linux论坛上你就可以被人称作"高手"了!到了这个地步,就相当于一撞大楼已经基本建好,但是还需要粉刷和装修,真正的细活还在后面!
永远记住天外有天,人外有人的道理.即便有了LFS水平,在那些搞linux系统开发,通读过linux内核代码的人看来你还是一个菜鸟.因此, 请时刻保持虚心的态度.即便是在 论坛上只有一颗星级别的人,也有可能是一个潜在的,真正的高手! 大多数真正的高手平时都在搞研发工作,哪里有时间上论坛啊! 倒是有很多大学还没毕业的学生,整天混在论坛上.
10,学习专业课程
如果你不是计算机专业的,而想把linux学好,就一定要学习专业课程.学习微机原理,操作系统,计算机网络等等专业课程是必需的.为什么同时开始学习 linux,有些人学的非常快,不到半年就成了高手,有些人玩来玩去还玩不出名堂,玩了一两年还是菜鸟? 因为那些学得快的人有基础,他们都学过专业课程.同样一篇文档,没有基础的人可能看了三遍还不明白,基础扎实的眼睛扫两下就懂了! 这就是专业和非专业的差别! 因此,要想达到更高的境界就一定要学习基础的专业课程.
11,保持虚心学习的态度
我想再重复一遍天外有天,人外有人的道理!保持虚心的学习态度不仅能让你学到更多知识,而且会让你受人尊重.
在linux的世界里,如果你想靠混论坛,发水贴,换几颗星星增加一下级别,然后再面对菜鸟说几句牛哄哄的话来赢得别人的尊重是不可能的.即便是一个刚入门的菜鸟,也能分辨你回答问题的质量,从而知道你到底有多少水平. 另外,当你成了"高手"的时候,你也能从"菜鸟"那里学到很多知识.因为有很多问题是你从来没有想过的,认为自己肯定会的,但是实际遇到的时候会有困难. 而"菜鸟"们往往更善于发现这类问题.这就是中国人常说的"教学相长"!
在linux的世界里,越是水平高的人越谦虚,因为他们知道自己还有很多不知道的,而那些半瓶水就想晃荡的人反而自以为是,因为他们还不知道自己还有很多不知道的! 去看看,www.linuxforum.net 嵌入式开发和UNIX版块的牛人,他们很多都是有过好几年linux方面的工作经验,精通linux和unix的好手,但是每个人都保持着非常谦逊的态度,这些人是值得尊敬的!

日志标题：曼昆：经济学十大原理
发表时间：2006-5-20 21:54:34
日志内容：#isubb#曼昆：经济学十大原理
人们如何作出决策 How people make decisions
1.人们面临权衡取舍 People face tradeoffs
2.某些东西的成本是为了得到它所放弃东西 The cost of something is what you give up to get it
3.理性人考虑边际量 Rational people think at the margin
4.人们会对激励作出反应 People respond to incentives
人们如何相互交易How people interact
5.贸易能使每个人的状况变得更好Trade can make everyone better off
6.市场通常是组织经济活动的一种最好方法Markets are usually a good way to organize economic activity
7.政府有时可以改善市场结果Governments can sometimes improve market outcomes

整个经济如何运行 How the economy as a whole works
8.一国的生活水平取决于它生产物品与劳务的能力A country's standard of living depends on its ability to produce goods and services
9.当政府发行了过多货币时，物价上升Prices rise when the government prints too much money
10.社会面临通货膨胀与失业之间的短期权衡取舍Society faces a short-run tradeoff between inflation and unemployment
原理一：人们面临权衡取舍
　　当人们组成社会时，他们面临各种不同的权衡取舍。典型的是在“大炮与黄油”之间的选择。在现代社会里，同样重要的是清洁的环境和高收入水平之间的权衡取舍。
　　认识到人们面临权衡取舍本身并没有告诉我们，人们将会或应该做出什么决策。然而，认识到生活中的权衡取舍是重要的，因为人们只有了解了他们面临的选择，才能做出良好的决策。
　　原理二：某种东西的成本是为了得到它所放弃的东西
　　一种东西的机会成本（opportunitycost）是为了得到这种东西所放弃的东西。当做出任何一项决策，例如，是否上大学时，决策者应该认识到伴随着每一种可能的行动而来的机会成本。实际上，决策者通常是知道这一点的。那些到了上大学的年龄的运动员如果退学，转而从事职业运动就能赚几百万美元，他们深深认识到，他们上大学的机会成本极高。他们往往如此决定：不值得花费这种成本来获得上大学的利益，这一点也不奇怪。
　　原理三：理性人考虑边际量
　　经济学家用边际变运（marginal change）这个术语来描述对现有行动计划的微小增量调整，边际变运是围绕你所做的事的边缘的调整。
　　个人和企业通过考虑边际量，将会做出更好的决策。而且，只有一种行动的边际利益大于边际成本，一个理性决策者才会采取这项行动。
　　原理四：人们会对激励做出反应
　　由于人们通过比较成本与利益做出决策，所以，当成本或利益变动时，人们的行为也会改变。这就是说，人们会对激励做出反应。
　　然而，政策有时也会有事先并不明显的影响。在分析任何一种政策时，我们不仅应该考虑直接影响，而且还应该考虑通过激励发生的间接影响。如果政策改变了激励，那就会使人们改变自己的行为。
　　原理五：贸易能使每个人状况更好
　　也许你在新闻中听到过，在世界经济中日本人是美国人的竞争对手。
　　实际上，两国之间的贸易可以使两个国家的状况都变得更好。
　　从某种意义上说，经济中每个家庭都与所有其他家庭竞争。
　　尽管有这种竞争，但把你的家庭与所有其他家庭隔绝开来并不会使大家过得更好。通过与其他人交易，人们可以按较低的成本获得各种各样的物品与劳务。
　　原理六：市场通常是组织经济活动的一种好方法
　　现在大部分曾经是中央计划经济的国家已经放弃了这种制度，并努力发展市场经济。在一个市场经济（market economy）中，中央计划者的决策被千百万企业和家庭的决策所取代。这些企业和家庭在市场上相互交易，价格和个人利益引导着他们的决策。
　　原理七：政府有时可以改善市场结果
　　为什么我们需要政府呢？一种回答是，看不见的手需要政府来保护它。只有产权得到保障，市场才能运行。
　　但是，还有另一种回答。政府干预经济的原因有两类：促进效率和促进平等。
　　尽管看不见的手通常会使市场有效地配置资源，但情况并不总是这样。经济学家用市场失灵（market failure）这个术语来指市场本身不能有效配置资源的情况。
　　我们说政府有时可以改善市场结果并不意味着它总能这样。学习经济学的目的之一就是帮助你判断什么时候一项政府政策适用于促进效率与公证。
　　原理八：一国的生活水平取决于它生产物品与劳务的能力
　　世界各国生活水平的差别是惊人的。随着时间推移，生活水平的变化也很大。用什么来解释各国和不同时期中生活水平的巨大差别呢？答案是几乎所有生活水平的变动都可以归因于各国生产率（productivity）的差别。
　　生产率与生活水平之间的关系对公共政策也有深远的含义。在考虑任何一项政策如何影响生活水平时，关键问题是这项政策如何影响我们生产物品与劳务的能力。
　　原理九：当政府发行了过多货币时，物价上升
　　什么引起了通货膨胀？在大多数严重或持续的通货膨胀情况下，罪魁祸首总是相同的———货币量的增长。当一个政府创造了大量本国货币时，货币的价值下降了。
　　原理十：社会面临通货膨胀与失业之间的短期权衡取舍
　　当政府增加经济中的货币量时，一个结果是通货膨胀，另一个结果是至少在短期内降低失业水平。说明通货膨胀与失业之间短期权衡取舍的曲线被称为菲利普斯曲线（Phillips curve），这个名称是为了纪念第一个研究了这种关生活费的经济学家而命名的。
　　经济学家仍对菲利普斯曲线有所争议，但大多数经济学家现在接受了这样一种思想：通货膨胀与失业之间存在短期权衡取舍。这就简单地意味着，在一两年的时期中，许多经济政策在相反的方向推动通货膨胀与失业。无论通货膨胀和失业从高水平开始（正如20世纪80年代初的情况），从低水平开始（正如20世纪90年代后期的情况），或者从这两者之间某个地方开始，决策者都面临这种权衡取舍。

日志标题：今天在讲台上自习,过了把瘾先
发表时间：2006-6-11 12:00:36
日志内容：#isubb#临近考试,上自习是越来越难了!偌大的教室仅有几人,但桌子上的书却不少? 难道是书在人不在就可以学习?
   无奈俺苦苦寻了几个楼层,均无果.
   最后实在是没有办法了,看到有一个座位上有一本书放在一边.本打算坐在另一边,旁边有一美眉客气的对我
说,已经有人了.唉,只好另寻其他的地方.
   到了2611,终于发现一个好地方-----讲台.这个讲台可和别的教室不一样---是张普通的桌子!
   这地方没有人占领,你可别说真是个好地方------风这好从这经过,好不凉快!但这可招来了不少"非议".这也是无奈之举.
   过了些许时间,前面的一张桌上的书被人拿走了.我也转移阵地.到最后,教室里还是那么多人,书还那里静静的躺着.
  以后同学们要是实在找不到地方,可以到2611去.

日志标题：终于升级完了
发表时间：2006-7-10 20:25:00
日志内容：前几天在用linux的时候,不只是用了哪个命令,把mbr给毁了!启动不了!自己整了好久都不能成功,最后不得已---

 不如下个fc5吧.升级一下能把它搞好! 等我把五个cd镜像下完后,就开始安装,也没有检查有没有下载错误. 
以前是从硬盘安装的,所以这才比较轻松. 还是把上次安装fc4 的经历先说一下吧.

 记得那天早上醒来,就开始搞,原本升级我的redhat 9 可是没成功,不如重新安吧!也没有备份里面的东西,
记得有很多电影,都没有来得及看.没想到这么慢,简直超出我的心里承受能力.让我没有想到的是,最后还有两
分钟的时候,停电了.一上午的工作就这么给毁了.狠了狠心,下午逃了一节课,给把她装上了.

 等重装'我重新启动后,进入fc4后,太美了----我的显卡认出了.以前redhat 9的时候,只能在800X600下工作,自己是个新手,也不会装驱动. 学了linux不久,渐渐的入门了.自己也越来越喜欢她了.自己并不反对windows ,只要能满足自己的需要,用什么都可以! 再来说升级,没想到这次还要慢,上面显示都是800多分钟.装了好多次,都是到哪个地方给停下来,我以为是哪里出了错,就重启了.没想到这次半路的升级,系统就出了不少错误.重启后不能进入图形界面,有个配置文件中有错误.后来重新装了,才好了.再就是编译软件的时候,不是缺这个就是少哪个.有一部分软件没有升级,所以出现了错误.自己现在是不能改了 . 本来打算要重装的,想到以前安了那么多软件,多少有些不甘心. 考完试后,没事干,就在昨天晚上---也就是世界杯决赛的时候,我决定再试最后一次.大约是从凌晨一点多开始的,他们都在看比赛,我上床睡了---实在太累累! 等我早上醒来的时候,电脑还在运行呢.还有那么多时间.是放弃还是------,本来是今天回家的.打电话给家里--明天回家. 

 原本想再过一上午就可以装完了,中午的时候还有300多分钟.用Ctrl+Alt+F3来看了下她的安装显示,原来她先处理一下iso文件,怪不得这么慢.再仔细看,从一个iso文件到另一个要需要3个多小时呢.最后在同学的鼓励下,自己才忍受到最后----下午六点多---装完了.赶快重启,用gcc编译了一下那个helloword.c,行了.看了是好了. 回到图形界面,提示说有几个文件找不到.是个小问题,只是俄罗斯方块(我唯一玩的游戏)的图标找不到. 又回到以前的状态了! 另:自从到了大学,不怕大家笑话--没有写过这么长的东西.记得自己以前写的字还可以,谁知现在,要多难看有多难看(现在平常很少写字).再就是自己的表达能力很差,平常说话要说好几遍,别人才能明白.那些标标点点更是不太会用,不知要从哪里断开. 没有一个合乎规范的句子.没想到又学了两年,一点进步都没有. 临回家的晚上 记

日志标题：nmap 扫描器
发表时间：2006-9-28 14:34:00
日志内容：

1.名称 nmap-网络探测和安全扫描工具 2.语法 nmap[ScanType(s)][Options] 3.描述 　　
 nmap是一个网络探测和安全扫描程序，系统管理者和个人可以使用这个软件扫描大型的网络，获取那台主机正在运行以及提供什么服务等信息。
 nmap支持很多扫描技术，例如：UDP、TCPconnect()、TCPSYN(半开扫
描)、ftp代理(bounce攻击)、反向标志、 ICMP、FIN、ACK扫描、圣Tree)、SYN扫描和null扫描。从扫描类型一节可以得到细节。nmap还提供了一些高级的特征，例如：通过TCP/IP协议栈特征探测操作系统类型，秘密扫描，动态延时和重传计算，并行扫描，通过并行ping扫描探测关闭的主机，诱饵扫描，避开端口过滤检测，直接RPC扫描(无须端口影射)，碎片扫描，以及灵活的目标和端口设定。  nmap 使用的方法很简单: nmap[目标主机]例如: nmap 202.199.248.211还可以一次扫描一个网段的所有IP来确定那些机器的服务端口值得重视: nmap 202.199.248.1-255在扫描中,你可以指定一些选项,常用的选项有: -sT 用建立TCP连接的方式进行扫描 -sS "半开放式"扫描,这个扫描方式的主要用处是避免被服务器的自动记录程序记录下来.对于希望扫描别人的扫描者,这种功能是很有用的. -sP 只是使用ping方式确定那些机器是处于活动状态的. -sU 用发送/接收UDP数据报的方式进行扫描 -sR 启用RPC扫描 -p 明确使用哪个端口号

日志标题：两年前
发表时间：2006-10-11 21:39:00
日志内容：两年前的某天,我和她成了普通朋友!


日志标题：等待
发表时间：2006-10-21 10:13:00
日志内容：除了等待.我别无选择-------

